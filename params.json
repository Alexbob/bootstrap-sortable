{"name":"Bootstrap-sortable","tagline":"adding sorting ability to bootstrap table","body":"bootstrap-sortable\r\n==================\r\nadding sorting ability to bootstrap table  \r\nCurrent version: 1.4.0\r\n\r\nIn fact, it can be used for any tables.\r\n\r\nSorting provided by [TinySort](https://github.com/Sjeiti/TinySort).\r\nDate parsing provided by [moment.js](https://github.com/timrwood/moment/).\r\n\r\nAvailable for download with NuGet, search for `bootstrap-sortable`.  \r\nWorking [demo](http://htmlpreview.github.io/?https://github.com/drvic10k/bootstrap-sortable/blob/master/Demo/index.html).\r\n\r\n####Basic usage:\r\n\r\nAdd references to bootstrap-sortable.css and bootstrap-sortable.js to your page. Add class \"sortable\" to your bootstrap table.\r\nHTML table has to be properly formated, using `<thead>`, `<th>` and `<tbody>` elements. You can disable sorting for a column by using `<td>` instead of `<th>` in header.\r\n\r\nWhen you add table rows or whole table from client side, use `$.bootstrapSortable(applyLast)` function to add sortability to parts/tables that were not present at document.ready.\r\nUse optional paramater `applyLast=true` if you want to preserve the last used sorting.\r\n\r\n####Optional attributes:\r\n\r\nYou can preset one column to be sorted when table is loaded using `data-defaultsort` attribute:\r\n```html\r\n<th> Column 1</th>\r\n<th> Column 2</th>\r\n<th data-defaultsort=\"desc\"> Column 3</th>\r\n```\r\n\r\nYou can change the value that is used for sorting for each `<td>` using `data-value` attribute:\r\n```html\r\n<td data-value=\"5.45\">5,45</td>\r\n```\r\n\r\nYou can sort dates, even if they are in different formats. Specify date formats according to moment.js documentation.\r\n```html\r\n<td data-dateformat=\"YYYY-MM-DD\">2013-06-24</td>\r\n<td data-dateformat=\"DD-MMM-YYYY\">26 June 2013</td>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}